{"version":3,"sources":["../src/charts.js"],"names":["define","$","d3","nvd3amd","str","init","block3j","block4j","quizgrade","cmid","click","resetFilter","not","show","allResults","get_string","done","val","removeClass","html","window","lastindex","nv","addGraph","chart3","models","discreteBarChart","x","d","label","y","value","staggerLabels","showValues","duration","showLegend","color","showYAxis","yAxis","tickFormat","format","select","datum","JSON","parse","call","utils","windowResize","update","discretebar","dispatch","on","e","inProgressFilterStringPr","notStartedFilterStringPr","when","then","inProgressFilterString","range","data","split","minrange","Math","min","maxrange","max","searchParams","URLSearchParams","location","search","param","get","index","each","grade","find","text","state","toggle","parseInt","includes","filteredResults","addClass","animate","scrollTop","offset","top","chart4","pieChart","showLabels","labelThreshold","labelType","donut","donutRatio","valueFormat","transition","pie","notStartedFilterString","displayparam","gradecell","target","innerHTML","hasClass","qstatus","qstatusstr","ca","length","set","href","origin","pathname","toString","qparam","trigger","filtergrade","attr","filtertitle","parent","preventDefault","cocell","attempts","attempt","prop","userid"],"mappings":"w9BAAAA,OAAM,+BAAC,CAAC,QAAD,CAAW,yBAAX,CAAsC,8BAAtC,CAAsE,UAAtE,CAAD,CAAoF,SAAUC,CAAV,CAAaC,CAAb,CAAiBC,CAAjB,CAA0BC,CAA1B,CAA+B,CACrH,MAAO,CACHC,IAAI,CAAE,cAAUC,CAAV,CAAmBC,CAAnB,CAA4BC,CAA5B,CAAuCC,CAAvC,CAA6C,CAG/CR,CAAC,CAAC,cAAD,CAAD,CAAkBS,KAAlB,CAAwBC,CAAxB,EAGA,QAASA,CAAAA,CAAT,EAAuB,CACnBV,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyCC,IAAzC,GACA,GAAIC,CAAAA,CAAU,CAAGV,CAAG,CAACW,UAAJ,CAAe,aAAf,CAA8B,sBAA9B,CAAjB,CACAD,CAAU,CAACE,IAAX,CAAgB,SAAUC,CAAV,CAAe,CAC3BhB,CAAC,CAAC,cAAD,CAAD,CAAkBiB,WAAlB,CAA8B,UAA9B,EAA0CC,IAA1C,CAA+CF,CAA/C,CACH,CAFD,EAGAG,MAAM,CAACC,SAAP,CAAmB,CAAC,CACvB,CAGDC,EAAE,CAACC,QAAH,CAAY,UAAY,CACpB,GAAIC,CAAAA,CAAM,CAAGF,EAAE,CAACG,MAAH,CACRC,gBADQ,GAERC,CAFQ,CAEN,SAAUC,CAAV,CAAa,CACZ,MAAOA,CAAAA,CAAC,CAACC,KACZ,CAJQ,EAKRC,CALQ,CAKN,SAAUF,CAAV,CAAa,CACZ,MAAOA,CAAAA,CAAC,CAACG,KACZ,CAPQ,EAQRC,aARQ,KASRC,UATQ,KAURC,QAVQ,CAUC,GAVD,EAWRC,UAXQ,IAAb,CAYAX,CAAM,CAACY,KAAP,CAAa,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAwD,SAAxD,CAAmE,SAAnE,CAAb,EACAZ,CAAM,CAACa,SAAP,KACAb,CAAM,CAACc,KAAP,CAAaC,UAAb,CAAwBrC,CAAE,CAACsC,MAAH,CAAU,GAAV,CAAxB,EAEAtC,CAAE,CAACuC,MAAH,CAAU,aAAV,EAAyBC,KAAzB,CAA+BC,IAAI,CAACC,KAAL,CAAWtC,CAAX,CAA/B,EAAoDuC,IAApD,CAAyDrB,CAAzD,EAEAF,EAAE,CAACwB,KAAH,CAASC,YAAT,CAAsBvB,CAAM,CAACwB,MAA7B,EAGAxB,CAAM,CAACyB,WAAP,CAAmBC,QAAnB,CAA4BC,EAA5B,CAA+B,cAA/B,CAA+C,SAAUC,CAAV,CAAa,IACpDC,CAAAA,CAAwB,CAAGjD,CAAG,CAACW,UAAJ,CAAe,iBAAf,CAAkC,MAAlC,CADyB,CAEpDuC,CAAwB,CAAGlD,CAAG,CAACW,UAAJ,CAAe,YAAf,CAA6B,sBAA7B,CAFyB,CAGxDd,CAAC,CAACsD,IAAF,CAAOF,CAAP,CAAiCC,CAAjC,EAA2DE,IAA3D,CAAgE,SAAUC,CAAV,CAA0D,IAClHC,CAAAA,CAAK,CAAGN,CAAC,CAACO,IAAF,CAAO9B,KAAP,CAAa+B,KAAb,CAAmB,KAAnB,CAD0G,CAGlHC,CAAQ,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQJ,CAAR,EAHmG,CAIlHM,CAAQ,CAAGF,IAAI,CAACG,GAAL,OAAAH,IAAI,oBAAQJ,CAAR,EAJmG,CAMlHQ,CAAY,CAAG,GAAIC,CAAAA,eAAJ,CAAoB/C,MAAM,CAACgD,QAAP,CAAgBC,MAApC,CANmG,CAOlHC,CAAK,CAAGJ,CAAY,CAACK,GAAb,CAAiB,SAAjB,CAP0G,CAWtH,GAAInD,MAAM,CAACC,SAAP,GAAqB+B,CAAC,CAACoB,KAA3B,CAAkC,CAC9B7D,CAAW,EACd,CAFD,IAEO,CACHV,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,IAClDC,CAAAA,CAAK,CAAGzE,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CANJ,0BAMI,EAAwBC,IAAxB,EAD0C,CAElDC,CAAK,CAAG5E,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CANJ,yBAMI,EAAwBC,IAAxB,EAF0C,CAGtD3E,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,GACAZ,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,GACA,GAAIC,QAAQ,CAACL,CAAD,CAAR,EAAmBb,CAAnB,EAA+BkB,QAAQ,CAACL,CAAD,CAAR,CAAkBV,CAArD,CAA+D,CAC3D/D,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACD,GAA4B,EAAvB,GAAAC,QAAQ,CAACf,CAAD,CAAR,EAAiD,EAApB,GAAAe,QAAQ,CAACL,CAAD,CAAtC,EAAiF,GAAvB,GAAAK,QAAQ,CAACf,CAAD,CAAR,EAAkD,GAApB,GAAAe,QAAQ,CAACL,CAAD,CAApG,CAAsH,CAClHzE,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACD,GAAgB,CAAZ,GAAA1B,CAAC,CAACoB,KAAF,EAAiBE,CAAK,CAACM,QAAN,CAAe,GAAf,CAAjB,EAAwCH,CAAK,CAACG,QAAN,CAAevB,CAAf,CAA5C,CAAoF,CAChFxD,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACJ,CAdD,EAgBA1D,MAAM,CAACC,SAAP,CAAmB+B,CAAC,CAACoB,KAArB,CACA,GAAIS,CAAAA,CAAe,CAAG7E,CAAG,CAACW,UAAJ,CAAe,kBAAf,CAAmC,sBAAnC,CAA2D,CAAC,MAASqC,CAAC,CAACO,IAAF,CAAO9B,KAAjB,CAAwB,MAASuB,CAAC,CAACO,IAAF,CAAO5B,KAAxC,CAA3D,CAAtB,CACAkD,CAAe,CAACjE,IAAhB,CAAqB,SAAUC,CAAV,CAAe,CAChChB,CAAC,CAAC,cAAD,CAAD,CAAkBiF,QAAlB,CAA2B,UAA3B,EAAuC/D,IAAvC,CAA4CF,CAA5C,CACH,CAFD,EAGAhB,CAAC,CAAC,YAAD,CAAD,CAAgBkF,OAAhB,CAAwB,CAACC,SAAS,CAAEnF,CAAC,CAAC,WAAD,CAAD,CAAeoF,MAAf,GAAwBC,GAApC,CAAxB,CAAkE,GAAlE,CACH,CAEJ,CAtCD,CAuCH,CA1CD,EA4CA,MAAO9D,CAAAA,CACV,CAnED,EAsEAF,EAAE,CAACC,QAAH,CAAY,UAAY,CACpB,GAAIgE,CAAAA,CAAM,CAAGjE,EAAE,CAACG,MAAH,CACR+D,QADQ,GAER7D,CAFQ,CAEN,SAAUC,CAAV,CAAa,CACZ,MAAOA,CAAAA,CAAC,CAACC,KACZ,CAJQ,EAKRC,CALQ,CAKN,SAAUF,CAAV,CAAa,CACZ,MAAOA,CAAAA,CAAC,CAACG,KACZ,CAPQ,EAQRI,UARQ,KASRsD,UATQ,KAURC,cAVQ,CAUO,GAVP,EAWRC,SAXQ,CAWE,SAXF,EAYRC,KAZQ,KAaRC,UAbQ,CAaG,EAbH,EAcRzD,KAdQ,CAcF,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAdE,CAAb,CAgBAmD,CAAM,CAACO,WAAP,CAAmB5F,CAAE,CAACsC,MAAH,CAAU,GAAV,CAAnB,EAEAtC,CAAE,CAACuC,MAAH,CAAU,aAAV,EAAyBC,KAAzB,CAA+BC,IAAI,CAACC,KAAL,CAAWrC,CAAX,CAA/B,EAAoDwF,UAApD,GAAiE7D,QAAjE,CAA0E,GAA1E,EAA+EW,IAA/E,CAAoF0C,CAApF,EAEAjE,EAAE,CAACwB,KAAH,CAASC,YAAT,CAAsBwC,CAAM,CAACvC,MAA7B,EAGAuC,CAAM,CAACS,GAAP,CAAW9C,QAAX,CAAoBC,EAApB,CAAuB,cAAvB,CAAuC,SAAUC,CAAV,CAAa,IAC5CC,CAAAA,CAAwB,CAAGjD,CAAG,CAACW,UAAJ,CAAe,iBAAf,CAAkC,MAAlC,CADiB,CAE5CuC,CAAwB,CAAGlD,CAAG,CAACW,UAAJ,CAAe,YAAf,CAA6B,sBAA7B,CAFiB,CAGhDd,CAAC,CAACsD,IAAF,CAAOF,CAAP,CAAiCC,CAAjC,EAA2DE,IAA3D,CAAgE,SAAUC,CAAV,CAAkCwC,CAAlC,CAA0D,IAClH/B,CAAAA,CAAY,CAAG,GAAIC,CAAAA,eAAJ,CAAoB/C,MAAM,CAACgD,QAAP,CAAgBC,MAApC,CADmG,CAElHC,CAAK,CAAGJ,CAAY,CAACK,GAAb,CAAiB,SAAjB,CAF0G,CAOtH,GAAInD,MAAM,CAACC,SAAP,GAAqB+B,CAAC,CAACoB,KAA3B,CAAkC,CAC9B7D,CAAW,EACd,CAFD,IAEO,CACHV,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,IAClDC,CAAAA,CAAK,CAAGzE,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAPJ,0BAOI,EAAwBC,IAAxB,EAD0C,CAElDC,CAAK,CAAG5E,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAPJ,yBAOI,EAAwBC,IAAxB,EAF0C,CAGtD3E,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,GACAZ,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,GACA,GAAgB,CAAZ,GAAA1B,CAAC,CAACoB,KAAF,EAAiB,CAACE,CAAK,CAACM,QAAN,CAAe,GAAf,CAAtB,CAA2C,CACvC/E,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACD,GAAgB,CAAZ,GAAA1B,CAAC,CAACoB,KAAF,EAAiBE,CAAK,CAACM,QAAN,CAAe,GAAf,CAAjB,EAAwCH,CAAK,CAACG,QAAN,CAAevB,CAAf,CAA5C,CAAoF,CAChFxD,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACD,GAAgB,CAAZ,GAAA1B,CAAC,CAACoB,KAAF,EAAiBE,CAAK,CAACM,QAAN,CAAe,GAAf,CAAjB,EAAwCH,CAAK,CAACG,QAAN,CAAeiB,CAAf,CAA5C,CAAoF,CAChFhG,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACJ,CAdD,EAeA1D,MAAM,CAACC,SAAP,CAAmB+B,CAAC,CAACoB,KAArB,CACA,GAAIS,CAAAA,CAAe,CAAG7E,CAAG,CAACW,UAAJ,CAAe,kBAAf,CAAmC,sBAAnC,CAA2D,CAAC,MAASqC,CAAC,CAACO,IAAF,CAAO9B,KAAjB,CAAwB,MAASuB,CAAC,CAACO,IAAF,CAAO5B,KAAxC,CAA3D,CAAtB,CACAkD,CAAe,CAACjE,IAAhB,CAAqB,SAAUC,CAAV,CAAe,CAChChB,CAAC,CAAC,cAAD,CAAD,CAAkBiF,QAAlB,CAA2B,UAA3B,EAAuC/D,IAAvC,CAA4CF,CAA5C,CACH,CAFD,EAGAhB,CAAC,CAAC,YAAD,CAAD,CAAgBkF,OAAhB,CAAwB,CAACC,SAAS,CAAEnF,CAAC,CAAC,WAAD,CAAD,CAAeoF,MAAf,GAAwBC,GAApC,CAAxB,CAAkE,GAAlE,CACH,CACJ,CAhCD,CAiCH,CApCD,EAsCA,MAAOC,CAAAA,CACV,CA/DD,EAkEAtF,CAAC,CAAC,kEAAD,CAAD,CAAsES,KAAtE,CAA4E,SAAU0C,CAAV,CAAa,IAEjFc,CAAAA,CAAY,CAAG,GAAIC,CAAAA,eAAJ,CAAoB/C,MAAM,CAACgD,QAAP,CAAgBC,MAApC,CAFkE,CAGjF6B,CAAY,CAAGhC,CAAY,CAACK,GAAb,CAAiB,SAAjB,CAHkE,CAKjF4B,CAAS,CAAG,4BAA8BpB,QAAQ,CAAC3B,CAAC,CAACgD,MAAF,CAASC,SAAV,CAL+B,CAMrF,GAAIpG,CAAC,CAAC,IAAD,CAAD,CAAQqG,QAAR,CAAiB,OAAjB,CAAJ,CAA+B,IACvBC,CAAAA,CAAO,CAAGJ,CAAS,qBADI,CAEvBK,CAAU,CAAG,yCACpB,CAHD,IAGO,IACCD,CAAAA,CAAO,CAAGJ,CAAS,oBAAT,CAAuCA,CAAvC,iCAA0FA,CAA1F,oBADX,CAECK,CAAU,CAAG,sCACpB,CAED,GAAqB,MAAjB,GAAAN,CAAJ,CAA6B,CACzBjG,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,CACtD,GAAIgC,CAAAA,CAAE,CAAGxG,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa1E,CAAC,CAACsG,CAAD,CAAd,CAAT,CACAtG,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,GACAZ,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,GACA,GAAgB,CAAZ,CAAA2B,CAAE,CAACC,MAAP,CAAmB,CACfzG,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACJ,CAPD,EASA,GAAIG,CAAAA,CAAe,CAAG7E,CAAG,CAACW,UAAJ,CAAeyF,CAAf,CAA2B,sBAA3B,CAAmDpD,CAAC,CAACgD,MAAF,CAASC,SAA5D,CAAtB,CACApB,CAAe,CAACjE,IAAhB,CAAqB,SAAUC,CAAV,CAAe,CAChChB,CAAC,CAAC,cAAD,CAAD,CAAkBiF,QAAlB,CAA2B,UAA3B,EAAuC/D,IAAvC,CAA4CF,CAA5C,CACH,CAFD,EAGAhB,CAAC,CAAC,YAAD,CAAD,CAAgBkF,OAAhB,CAAwB,CAACC,SAAS,CAAEnF,CAAC,CAAC,WAAD,CAAD,CAAeoF,MAAf,GAAwBC,GAApC,CAAxB,CAAkE,GAAlE,CACH,CAfD,IAeO,CACHpB,CAAY,CAACyC,GAAb,CAAiB,SAAjB,CAA4B,MAA5B,EACAzC,CAAY,CAACyC,GAAb,CAAiB,MAAjB,CAAyB,iBAAzB,EACAzC,CAAY,CAACyC,GAAb,CAAiB,GAAjB,CAAsBvD,CAAC,CAACgD,MAAF,CAASC,SAA/B,EACAnC,CAAY,CAACyC,GAAb,CAAiB,IAAjB,CAAuBlG,CAAvB,EACAW,MAAM,CAACgD,QAAP,CAAgBwC,IAAhB,CAAuBxF,MAAM,CAACgD,QAAP,CAAgByC,MAAhB,CAAyBzF,MAAM,CAACgD,QAAP,CAAgB0C,QAAzC,CAAoD,GAApD,CAA0D5C,CAAY,CAAC6C,QAAb,EACpF,CACJ,CApCD,EAxJ+C,GA+L3C7C,CAAAA,CAAY,CAAG,GAAIC,CAAAA,eAAJ,CAAoB/C,MAAM,CAACgD,QAAP,CAAgBC,MAApC,CA/L4B,CAgM3C2C,CAAM,CAAG9C,CAAY,CAACK,GAAb,CAAiB,GAAjB,CAhMkC,CAiM3C2B,CAAY,CAAGhC,CAAY,CAACK,GAAb,CAAiB,SAAjB,CAjM4B,CAkM/C,GAAIyC,CAAM,EAAqB,MAAjB,GAAAd,CAAd,CAAuC,CAC3BjG,CAAC,CAAC,sEAAwE+G,CAAzE,CAAD,CAAkFC,OAAlF,CAA0F,OAA1F,CACX,CAGDhH,CAAC,CAAC,yDAAD,CAAD,CAA6DS,KAA7D,CAAmE,SAAU0C,CAAV,CAAa,IACxE8D,CAAAA,CAAW,CAAGjH,CAAC,CAAC,IAAD,CAAD,CAAQkH,IAAR,CAAa,UAAb,CAD0D,CAExEC,CAAW,CAAGnH,CAAC,CAAC,IAAD,CAAD,CAAQkH,IAAR,CAAa,YAAb,CAF0D,CAI5ElH,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,CACtDxE,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,GACAZ,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CAHD,EAKA7E,CAAC,CAAC,0BAAD,CAAD,CAA8BwE,IAA9B,CAAmC,UAAY,CAC3C,GAAGxE,CAAC,CAAC,IAAD,CAAD,CAAQkH,IAAR,CAAa,UAAb,GAA4BD,CAA/B,CAA2C,CACvCjH,CAAC,CAAC,IAAD,CAAD,CAAQoH,MAAR,GAAiBA,MAAjB,GAA0BxG,IAA1B,EACH,CACJ,CAJD,EAMA,GAAIoE,CAAAA,CAAe,CAAG7E,CAAG,CAACW,UAAJ,CAAeqG,CAAf,CAA4B,sBAA5B,CAAoDhE,CAAC,CAACgD,MAAF,CAASC,SAA7D,CAAtB,CACApB,CAAe,CAACjE,IAAhB,CAAqB,SAAUC,CAAV,CAAe,CAChChB,CAAC,CAAC,cAAD,CAAD,CAAkBiF,QAAlB,CAA2B,UAA3B,EAAuC/D,IAAvC,CAA4CF,CAA5C,CACH,CAFD,EAGAhB,CAAC,CAAC,YAAD,CAAD,CAAgBkF,OAAhB,CAAwB,CAACC,SAAS,CAAEnF,CAAC,CAAC,WAAD,CAAD,CAAeoF,MAAf,GAAwBC,GAApC,CAAxB,CAAkE,GAAlE,CACH,CApBD,EAuBArF,CAAC,CAAC,wCAAD,CAAD,CAA4CS,KAA5C,CAAkD,SAAU0C,CAAV,CAAa,CAC3DA,CAAC,CAACkE,cAAF,GACA9C,KAAK,CAAG,CAAR,CAF2D,GAIvD+C,CAAAA,CAAM,CAAG,aAJ8C,CAKvDC,CAAQ,CAAG,EAL4C,CAM3D,GAAIpG,MAAM,CAACC,SAAP,GAAqBmD,KAAzB,CAAgC,CAC5BvE,CAAC,CAAC,iCAAD,CAAD,CAAqCiB,WAArC,CAAiD,gBAAjD,EACAP,CAAW,GACX6G,CAAQ,CAAG,EACd,CAJD,IAIO,CACHvH,CAAC,CAAC,iCAAD,CAAD,CAAqCiF,QAArC,CAA8C,gBAA9C,EAEAjF,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,CACtD,GAAIC,CAAAA,CAAK,CAAGzE,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,6BAAwBC,IAAxB,EAAZ,CACA,GAAc,CAAV,GAAAJ,KAAK,EAAU,CAACE,CAAK,CAACM,QAAN,CAAe,GAAf,CAApB,CAAyC,IACjCyC,CAAAA,CAAO,CAAGxH,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa4C,CAAb,EAAqBG,IAArB,CAA0B,OAA1B,CADuB,CAEjCC,CAAM,CAAG1H,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa4C,CAAb,EAAqB5D,IAArB,CAA0B,QAA1B,CAFwB,CAGrC,GAAI8D,CAAO,SAAX,CAA2B,CACvB,GAAID,CAAQ,CAACG,CAAD,CAAR,WAAkCH,CAAQ,CAACG,CAAD,CAAR,EAAoBF,CAA1D,CAAmE,CAC/DD,CAAQ,CAACG,CAAD,CAAR,CAAmBF,CACtB,CACJ,CACJ,CACJ,CAXD,EAaAxH,CAAC,CAAC,oBAAD,CAAD,CAAwBW,GAAxB,CAA4B,WAA5B,EAAyC6D,IAAzC,CAA8C,UAAY,CACtDxE,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,GACAZ,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,GACA,GAAI0C,CAAQ,CAACvH,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa4C,CAAb,EAAqB5D,IAArB,CAA0B,QAA1B,CAAD,CAAR,EAAiD1D,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa4C,CAAb,EAAqBG,IAArB,CAA0B,OAA1B,CAAjD,EAAuFF,CAAQ,CAACvH,CAAC,CAAC,IAAD,CAAD,CAAQ0E,IAAR,CAAa4C,CAAb,EAAqB5D,IAArB,CAA0B,QAA1B,CAAD,CAAR,SAA3F,CAAwJ,CACpJ1D,CAAC,CAAC,IAAD,CAAD,CAAQ6E,MAAR,EACH,CACJ,CAND,EAOA1D,MAAM,CAACC,SAAP,CAAmBmD,KAAnB,CACAvE,CAAC,CAAC,YAAD,CAAD,CAAgBkF,OAAhB,CAAwB,CAAEC,SAAS,CAAEnF,CAAC,CAAC,WAAD,CAAD,CAAeoF,MAAf,GAAwBC,GAArC,CAAxB,CAAoE,GAApE,CACH,CACJ,CApCD,CAsCH,CArQE,CAuQV,CAxQK,CAAN","sourcesContent":["define(['jquery', 'quiz_teacheroverview/d3', 'quiz_teacheroverview/nvd3amd', 'core/str'], function ($, d3, nvd3amd, str) {\n    return {\n        init: function (block3j, block4j, quizgrade, cmid) {\n\n            // Reset table filter if user clicks on filter status close button.\n            $(\"#filtervalue\").click(resetFilter);\n\n            // Function resets table and filter status.\n            function resetFilter() {\n                $('#attempts tbody tr').not('.emptyrow').show();\n                var allResults = str.get_string('all_results', 'quiz_teacheroverview');\n                allResults.done(function (val) {\n                    $(\"#filtervalue\").removeClass('filtered').html(val)\n                }); // Reset filter status.\n                window.lastindex = -1; // Reset last clicked bar.\n            }\n\n            // SG - block 3 - bar chart.\n            nv.addGraph(function () {\n                var chart3 = nv.models\n                    .discreteBarChart()\n                    .x(function (d) {\n                        return d.label;\n                    })\n                    .y(function (d) {\n                        return d.value;\n                    })\n                    .staggerLabels(false)\n                    .showValues(false)\n                    .duration(250)\n                    .showLegend(false);\n                chart3.color(['#8F6FC2', '#7f3e53', '#260A55', '#260A55', '#260A55', '#260A55', '#260A55']);\n                chart3.showYAxis(false);\n                chart3.yAxis.tickFormat(d3.format('d'));\n\n                d3.select('#block3 svg').datum(JSON.parse(block3j)).call(chart3);\n\n                nv.utils.windowResize(chart3.update);\n\n                // SG - filtering attempts table by barchart.\n                chart3.discretebar.dispatch.on('elementClick', function (e) {\n                    var inProgressFilterStringPr = str.get_string('stateinprogress', 'quiz');\n                    var notStartedFilterStringPr = str.get_string('notstarted', 'quiz_teacheroverview');\n                    $.when(inProgressFilterStringPr, notStartedFilterStringPr).then(function (inProgressFilterString, notStartedFilterString) {\n                        var range = e.data.label.split(' - ');\n\n                        var minrange = Math.min(...range);\n                        var maxrange = Math.max(...range);\n\n                        var searchParams = new URLSearchParams(window.location.search);\n                        var param = searchParams.get('display');\n\n                        var gradecell = 'td.teacheroverviewgrades';\n                        var statecell = 'td.teacheroverviewstate';\n                        if (window.lastindex === e.index) {\n                            resetFilter(); // Reset table view if user clicks the same bar again.\n                        } else {\n                            $('#attempts tbody tr').not('.emptyrow').each(function () {\n                                var grade = $(this).find(gradecell).text();\n                                var state = $(this).find(statecell).text();\n                                $(this).show(); // Reset table view - show all rows.\n                                $(this).toggle(); // Hide every row.\n                                if (parseInt(grade) >= minrange && parseInt(grade) < maxrange) {\n                                    $(this).toggle(); // Show row that fits the condition.\n                                }\n                                if ((parseInt(maxrange) === 10 && parseInt(grade) === 10) || (parseInt(maxrange) === 100 && parseInt(grade) === 100)) {\n                                    $(this).toggle(); // Special conditions for 10 and 100 grades.\n                                }\n                                if (e.index === 0 && grade.includes('-') && state.includes(inProgressFilterString)) {\n                                    $(this).toggle(); // Special conditions for 'not submitted'.\n                                }\n                            });\n\n                            window.lastindex = e.index; // Remember last clicked bar.\n                            var filteredResults = str.get_string('filtered_results', 'quiz_teacheroverview', {'label': e.data.label, 'value': e.data.value});\n                            filteredResults.done(function (val) {\n                                $(\"#filtervalue\").addClass('filtered').html(val)\n                            }); // Set filter status before table.\n                            $(\"HTML, BODY\").animate({scrollTop: $(\"#attempts\").offset().top}, 800); // Scroll to the results table body.\n                        };\n\n                    });\n                });\n\n                return chart3;\n            });\n\n            // SG - block 4 - chart pie.\n            nv.addGraph(function () {\n                var chart4 = nv.models\n                    .pieChart()\n                    .x(function (d) {\n                        return d.label;\n                    })\n                    .y(function (d) {\n                        return d.value;\n                    })\n                    .showLegend(false)\n                    .showLabels(false) // Display pie labels.\n                    .labelThreshold(0.05) // Configure the minimum slice size for labels to show up.\n                    .labelType('percent') // Configure what type of data to show in the label. Can be \"key\", \"value\" or \"percent\".\n                    .donut(true) // Turn on Donut mode. Makes pie chart look tasty!\n                    .donutRatio(0.5) // Configure how big you want the donut hole size to be.\n                    .color(['#260A55', '#8F6FC2', '#A864A8']);\n\n                chart4.valueFormat(d3.format('d')); // Set only decimal value.\n\n                d3.select('#block4 svg').datum(JSON.parse(block4j)).transition().duration(350).call(chart4);\n\n                nv.utils.windowResize(chart4.update);\n\n                // SG - filtering attempts table by piechart.\n                chart4.pie.dispatch.on('elementClick', function (e) {\n                    var inProgressFilterStringPr = str.get_string('stateinprogress', 'quiz');\n                    var notStartedFilterStringPr = str.get_string('notstarted', 'quiz_teacheroverview');\n                    $.when(inProgressFilterStringPr, notStartedFilterStringPr).then(function (inProgressFilterString, notStartedFilterString) {\n                        var searchParams = new URLSearchParams(window.location.search);\n                        var param = searchParams.get('display')\n\n                        var gradecell = 'td.teacheroverviewgrades';\n                        var statecell = 'td.teacheroverviewstate';\n\n                        if (window.lastindex === e.index) {\n                            resetFilter(); // Reset table view if user clicks the same bar again.\n                        } else {\n                            $('#attempts tbody tr').not('.emptyrow').each(function () {\n                                var grade = $(this).find(gradecell).text();\n                                var state = $(this).find(statecell).text();\n                                $(this).show(); // Reset table view - show all rows.\n                                $(this).toggle(); // Hide every row.\n                                if (e.index === 0 && !grade.includes('-')) {\n                                    $(this).toggle(); // Special conditions for 'submitted'.\n                                }\n                                if (e.index === 1 && grade.includes('-') && state.includes(inProgressFilterString)) {\n                                    $(this).toggle(); // Special conditions for 'not submitted'.\n                                }\n                                if (e.index === 2 && grade.includes('-') && state.includes(notStartedFilterString)) {\n                                    $(this).toggle(); // Special conditions for 'not started'.\n                                }\n                            })\n                            window.lastindex = e.index; // Remember last clicked bar.\n                            var filteredResults = str.get_string('filtered_results', 'quiz_teacheroverview', {'label': e.data.label, 'value': e.data.value});\n                            filteredResults.done(function (val) {\n                                $(\"#filtervalue\").addClass('filtered').html(val)\n                            }); // Set filter status before table.\n                            $(\"HTML, BODY\").animate({scrollTop: $(\"#attempts\").offset().top}, 800); // Scroll to the results table body.\n                        };\n                    });\n                });\n\n                return chart4;\n            });\n\n            // SG - filtering attempts table by grades.\n            $('.quiz_teacheroverview_dashboard_block2 .question_details-element').click(function (e) {\n                // e.preventDefault();\n                var searchParams = new URLSearchParams(window.location.search);\n                var displayparam = searchParams.get('display');\n\n                var gradecell = 'td.teacheroverviewqsgrade' + parseInt(e.target.innerHTML);\n                if ($(this).hasClass('green')) {\n                    var qstatus = gradecell + ' span.' + 'user-correct';\n                    var qstatusstr = 'filtered_results_succeeded_by_questions';\n                } else {\n                    var qstatus = gradecell + ' span.' + 'incorrect, ' + gradecell + ' span.' + 'user-partiallycorrect, ' + gradecell + ' span.' + 'notanswered';\n                    var qstatusstr = 'filtered_results_failed_by_questions';\n                }\n\n                if (displayparam === 'full') {     // Filter only at full display mode (when grades are present).\n                    $('#attempts tbody tr').not('.emptyrow').each(function () {\n                        var ca = $(this).find($(qstatus));\n                        $(this).show();         // Reset table view - show all rows.\n                        $(this).toggle();       // Hide every row.\n                        if (ca.length > 0) {\n                            $(this).toggle();   // Show users filtered by grade.\n                        }\n                    });\n\n                    var filteredResults = str.get_string(qstatusstr, 'quiz_teacheroverview', e.target.innerHTML);\n                    filteredResults.done(function (val) {\n                        $(\"#filtervalue\").addClass('filtered').html(val)\n                    }); // Set filter status before table.\n                    $(\"HTML, BODY\").animate({scrollTop: $(\"#attempts\").offset().top}, 800); // Scroll to the results table body.\n                } else {\n                    searchParams.set('display', 'full');\n                    searchParams.set('mode', 'teacheroverview');\n                    searchParams.set('q', e.target.innerHTML);\n                    searchParams.set('id', cmid);\n                    window.location.href = window.location.origin + window.location.pathname + '?' + searchParams.toString(); // Go to full display mode to filter by grades.\n                }\n            });\n\n            // Go to full display mode to filter by grades.\n            var searchParams = new URLSearchParams(window.location.search);\n            var qparam = searchParams.get('q');\n            var displayparam = searchParams.get('display');\n            if (qparam && displayparam === 'full') {\n                var t = $('.quiz_teacheroverview_dashboard_block2 .question_details-element#dq' + qparam).trigger(\"click\");\n            }\n\n            // SG - filtering attempts table by grades.\n            $('.quiz_teacheroverview_dashboard_block1 .clickable-grade').click(function (e) {\n                var filtergrade = $(this).attr('data-rel');\n                var filtertitle = $(this).attr('data-title');\n\n                $('#attempts tbody tr').not('.emptyrow').each(function () {\n                    $(this).show();         // Reset table view - show all rows.\n                    $(this).toggle();       // Hide every row.\n                });\n\n                $('.teacheroverviewgrades a').each(function () {\n                    if($(this).attr('data-rel') == filtergrade){\n                        $(this).parent().parent().show();\n                    }\n                });\n\n                var filteredResults = str.get_string(filtertitle, 'quiz_teacheroverview', e.target.innerHTML);\n                filteredResults.done(function (val) {\n                    $(\"#filtervalue\").addClass('filtered').html(val);\n                }); // Set filter status before table.\n                $(\"HTML, BODY\").animate({scrollTop: $(\"#attempts\").offset().top}, 800); // Scroll to the results table body.\n            });\n\n            // Finished attempts.\n            $('#page-mod-quiz-report #id_onlygradedui').click(function (e) {\n                e.preventDefault();\n                index = 0;\n                var gradecell = 'td.teacheroverviewgrades';\n                var cocell = 'td.c0 input';\n                var attempts = [];\n                if (window.lastindex === index) {\n                    $('#id_onlygradedui > label > span').removeClass('toggle-checked');\n                    resetFilter(); // Reset table view if user clicks the same bar again.\n                    attempts = [];\n                } else {\n                    $('#id_onlygradedui > label > span').addClass('toggle-checked');\n                    // Prepare attempts for filtering.\n                    $('#attempts tbody tr').not('.emptyrow').each(function () {\n                        var grade = $(this).find(gradecell).text();\n                        if (index === 0 && !grade.includes('-')) {\n                            var attempt = $(this).find(cocell).prop('value');\n                            var userid = $(this).find(cocell).data('userid');\n                            if (attempt !== undefined) {\n                                if (attempts[userid] === undefined || attempts[userid] <= attempt) {\n                                    attempts[userid] = attempt;\n                                }\n                            }\n                        }\n                    })\n                    // Filtering attempts.\n                    $('#attempts tbody tr').not('.emptyrow').each(function () {\n                        $(this).show(); // Reset table view - show all rows.\n                        $(this).toggle(); // Hide every row.\n                        if (attempts[$(this).find(cocell).data('userid')] == $(this).find(cocell).prop('value') && attempts[$(this).find(cocell).data('userid')] !== undefined) {\n                            $(this).toggle(); // Special conditions for 'submitted'.\n                        }\n                    });\n                    window.lastindex = index; // Remember last clicked bar.\n                    $(\"HTML, BODY\").animate({ scrollTop: $(\"#attempts\").offset().top }, 800); // Scroll to the results table body.\n                }\n            });\n\n        } // init end\n    };\n});\n"],"file":"charts.min.js"}